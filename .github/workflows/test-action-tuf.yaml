name: Test github action with TUF

on:
  pull_request:
    branches: [ main ]

defaults:
  run:
    shell: bash
    working-directory: ./

concurrency:
  group: test-github-action-with-tuf${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  test-github-action:
    name: Test github action with TUF
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Keep running if one leg fails.
      matrix:
        k8s-version:
        - v1.22.x
        - v1.23.x
        - v1.24.x
        release-version:
        - "latest-release" # Test explicitly with latest
        - "v0.4.6" # Test version with TUF
        go-version:
        - 1.19
        leg:
        - test github action with TUF
    env:
      KO_DOCKER_REPO: registry.local:5000/knative
      COSIGN_EXPERIMENTAL: "true"

    steps:
    - name: Checkout the current action
      uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.0.2
    - name: Test running the action
      uses: ./actions/setup
      with:
        k8s-version: ${{ matrix.k8s-version }}
        version: ${{ matrix.release-version }}
        legacy-variables: "false"

    # Install cosign
    - name: Install cosign
      uses: sigstore/cosign-installer@7cc35d7fdbe70d4278a0c96779081e6fac665f88 # v2

    - name: Set up Go
      uses: actions/setup-go@c4a742cab115ed795e34d4513e2cf7d472deb55f # v3.3.0
      with:
        go-version: ${{ matrix.go-version }}
        check-latest: true

    - uses: imjasonh/setup-ko@v0.6
      with:
        version: v0.12.0

    - name: Create sample image
      run: |
        pushd $(mktemp -d)
        go mod init example.com/demo-action-with-tuf
        cat <<EOF > main.go
        package main
        import "fmt"
        func main() {
          fmt.Println("hello world")
        }
        EOF
        demoimage=$(ko publish -B example.com/demo-action-with-tuf)
        echo "demoimage=$demoimage" >> $GITHUB_ENV
        echo Created image $demoimage
        popd

    - name: Initialize cosign with TUF root
      run: cosign initialize --mirror ${{ env.TUF_MIRROR }} --root ./root.json

    - name: Sign with cosign from the action using k8s token
      run: |
        cosign sign --rekor-url ${{ env.REKOR_URL }} --fulcio-url ${{ env.FULCIO_URL }} --force --allow-insecure-registry ${{ env.demoimage }} --identity-token ${{ env.OIDC_TOKEN }}

    - name: Verify with cosign from the action using k8s token
      run: |
        cosign verify --rekor-url ${{ env.REKOR_URL }} --allow-insecure-registry ${{ env.demoimage }}

    - name: Collect diagnostics
      if: ${{ failure() }}
      uses: chainguard-dev/actions/kind-diag@main
