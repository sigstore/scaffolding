name: Test github action

on:
  pull_request:
    branches: [ main ]

defaults:
  run:
    shell: bash
    working-directory: ./

concurrency:
  group: test-github-action${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  test-github-action:
    name: Test github action
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Keep running if one leg fails.
      matrix:
        k8s-version:
        - v1.22.x
        # 1.23 missing nb: https://github.com/sigstore/scaffolding/issues/81
        release-version:
        - "v0.3.0" # Old version without TUF
        - "v0.4.3" # New version with TUF, but test without TUF
        - "v0.4.4" # New version with TUF, but test without TUF
        go-version:
        - 1.18
        leg:
        - test github action
    env:
      KO_DOCKER_REPO: registry.local:5000/knative
      COSIGN_EXPERIMENTAL: "true"
      # Trust the custom Rekor API endpoint for fetching the Public Key from it.
      # TODO(vaikas): Remove after #276 lands and use that instead
      SIGSTORE_TRUST_REKOR_API_PUBLIC_KEY: "true"

    steps:
    - name: Checkout the current action
      uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.2
    - name: Test running the action
      uses: ./actions/setup
      with:
        k8s-version: ${{ matrix.k8s-version }}
        version: ${{ matrix.release-version }}
    - name: Install cosign
      uses: sigstore/cosign-installer@b3413d484cc23cf8778c3d2aa361568d4eb54679 # v2

    - name: Set up Go
      uses: actions/setup-go@84cbf8094393cdc5fe1fe1671ff2647332956b1a # v3.2.0
      with:
        go-version: ${{ matrix.go-version }}
        check-latest: true

    # Setup ko
    - uses: imjasonh/setup-ko@78eea08f10db87a7a23a666a4a6fe2734f2eeb8d # v0.4
      with:
        version: tip

    - name: Create sample image
      run: |
        pushd $(mktemp -d)
        go mod init example.com/demo-action-no-tuf
        cat <<EOF > main.go
        package main
        import "fmt"
        func main() {
          fmt.Println("hello world")
        }
        EOF
        demoimage=$(ko publish -B example.com/demo-action-no-tuf)
        echo "demoimage=$demoimage" >> $GITHUB_ENV
        echo Created image $demoimage
        popd

    - name: Sign demoimage with cosign
      run: |
        cosign sign --rekor-url ${{ env.REKOR_URL }} --fulcio-url ${{ env.FULCIO_URL }} --force --allow-insecure-registry ${{ env.demoimage }} --identity-token ${{ env.OIDC_TOKEN }}

    - name: Verify with cosign
      run: |
        cosign verify --rekor-url ${{ env.REKOR_URL }} --allow-insecure-registry ${{ env.demoimage }}

    - name: Collect diagnostics
      if: ${{ failure() }}
      uses: chainguard-dev/actions/kind-diag@main
