name: Fulcio&Rekor E2E Tests Using Release

on:
  pull_request:
    branches: [ main ]

defaults:
  run:
    shell: bash
    working-directory: ./

concurrency:
  group: fulcio-rekor-kind-using-release-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  fulcio-rekor-ctlog-tests-using-release:
    name: e2e tests using release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Keep running if one leg fails.
      matrix:
        k8s-version:
        - v1.21.x
        - v1.22.x

        leg:
        - fulcio rekor ctlog e2e

    env:
      RELEASE_VERSION: "v0.2.8"
      KO_DOCKER_REPO: registry.local:5000/knative
      KOCACHE: ~/ko

    steps:
    - uses: chainguard-dev/actions/setup-mirror@main

    - name: Setup Cluster
      uses: chainguard-dev/actions/setup-kind@main
      id: kind
      with:
        k8s-version: ${{ matrix.k8s-version }}
        registry-authority: registry.local:5000
        cluster-suffix: cluster.local

    - name: Setup Knative
      uses: chainguard-dev/actions/setup-knative@main
      with:
        version: "1.1.0"

    - name: Install all the everythings
      timeout-minutes: 10
      run: |
        curl -L https://github.com/sigstore/scaffolding/releases/download/${{ env.RELEASE_VERSION }}/release.yaml | kubectl apply -f -

        # Wait for all the ksvc to be up.
        kubectl wait --timeout 10m -A --for=condition=Ready ksvc --all

    - name: Set the endpoints on the cluster
      run: |
        kubectl -n rekor-system get --no-headers ksvc rekor | cut -d ' ' -f 4
        REKOR_URL=`kubectl -n rekor-system get --no-headers ksvc rekor | cut -d ' ' -f 4`
        echo "REKOR_URL=$REKOR_URL" >> $GITHUB_ENV

    - name: Run curl against Rekor
      run: |
        echo ${{ env.REKOR_URL }}
        curl ${{ env.REKOR_URL }}/api/v1/log

    - name: Run Tests
      run: |
        # Grab the secret from the ctlog-system namespace and make a copy
        # in our namespace so we can get access to the CT Log public key
        # so we can verify the SCT coming from there.
        kubectl -n ctlog-system get secrets ctlog-public-key -oyaml | sed 's/namespace: .*/namespace: default/' | kubectl apply -f -

        # Also grab the secret from the fulcio-system namespace and make a copy
        # in our namespace so we can get access to the Fulcio public key
        # so we can verify against it.
        kubectl -n fulcio-system get secrets fulcio-secret -oyaml | sed 's/namespace: .*/namespace: default/' | kubectl apply -f -

        curl -L https://github.com/sigstore/scaffolding/releases/download/${{ env.RELEASE_VERSION }}/testrelease.yaml | kubectl create -f -

        kubectl wait --for=condition=Complete --timeout=180s job/sign-job
        kubectl wait --for=condition=Complete --timeout=180s job/checktree
        kubectl wait --for=condition=Complete --timeout=180s job/verify-job

    - name: Collect diagnostics
      if: ${{ failure() }}
      uses: chainguard-dev/actions/kind-diag@main
